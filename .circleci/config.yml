version: 2.1

parameters:
  start_at:
    type: string
    default: node
  branch:
    type: string
    default: v0.8

jobs:

  test:
    machine: true
    steps:
      - run: echo "pre condition"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ node, <<pipeline.parameters.start_at>> ]
          steps:
            - run: echo "<<pipeline.parameters.start_at>>"

  build-base-image:
    machine: true
    steps:
      - run: echo "base check"
      - run: echo "<<pipeline.parameters.branch>>"
      - when:
          condition:
            equal: [ base, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - run: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
            - run: cd base-builder && docker build . -t seemann/cpp-build-base:0.1.0 --build-arg BOOST_VERSION=1.73.0 --build-arg BOOST_VERSION_NAME=1_73_0
            - run: docker push seemann/cpp-build-base:0.1.0

  build-oecp-image:
    machine: true
    steps:
      - run: echo "base check"
      - when:
          condition:
            equal: [ base, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - run: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
            - run: cd oecp-base && docker build . -t seemann/oecp-base:0.1.0 --build-arg BOOST_VERSION=1.73.0 --build-arg BOOST_VERSION_NAME=1_73_0
            - run: docker push seemann/oecp-base:0.1.0

  build-cyng:
    machine: true
    steps:
      - run: echo "cyng check"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ cyng, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - run: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
            - run: cd cyng && docker build . -t seemann/cyng:0.1.0
            - run: docker push seemann/cyng:0.1.0

  build-oecp-cyng:
    machine: true
    steps:
      - run: echo "cyng check"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ cyng, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - run: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
            - run: cd oecp-cyng && docker build . -t seemann/oecp-cyng:0.1.0
            - run: docker push seemann/oecp-cyng:0.1.0

  build-crypto:
    machine: true
    steps:
      - run: echo "crypto check"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ cyng, <<pipeline.parameters.start_at>> ]
              - equal: [ crypto, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - run: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
            - run: cd crypto && docker build . -t seemann/crypto:0.1.0
            - run: docker push seemann/crypto:0.1.0

  build-oecp-crypto:
    machine: true
    steps:
      - run: echo "crypto check"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ cyng, <<pipeline.parameters.start_at>> ]
              - equal: [ crypto, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - run: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
            - run: cd oecp-crypto && docker build . -t seemann/oecp-crypto:0.1.0
            - run: docker push seemann/oecp-crypto:0.1.0

  build-node:
    machine: true
    steps:
      - run: echo "node check"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ cyng, <<pipeline.parameters.start_at>> ]
              - equal: [ crypto, <<pipeline.parameters.start_at>> ]
              - equal: [ node, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - run: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
            - run: cd node && docker build . -t seemann/node:0.1.0
            - run: docker push seemann/node:0.1.0

  build-oecp-node:
    machine: true
    steps:
      - run: echo "node check"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ cyng, <<pipeline.parameters.start_at>> ]
              - equal: [ crypto, <<pipeline.parameters.start_at>> ]
              - equal: [ node, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - run: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
            - run: cd oecp-node && docker build . -t seemann/oecp-node:0.1.0
            - run: docker push seemann/oecp-node:0.1.0

  build-master:
    machine: true
    steps:
      - run: echo "master check"
      - when:
          condition:
            or:
              - equal: [ base, <<pipeline.parameters.start_at>> ]
              - equal: [ cyng, <<pipeline.parameters.start_at>> ]
              - equal: [ crypto, <<pipeline.parameters.start_at>> ]
              - equal: [ node, <<pipeline.parameters.start_at>> ]
              - equal: [ master, <<pipeline.parameters.start_at>> ]
          steps:
            - checkout
            - run: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
            - run: cd master && docker build . -t seemann/master:0.1.0
            - run: docker push seemann/master:0.1.0

workflows:
  version: 2
  build-and-push-on-commit:
    jobs:
      - build-base-image:
          context: DOCKER_HUB
      - build-oecp-image:
          context: DOCKER_HUB
      - build-cyng:
          context: DOCKER_HUB
          requires:
            - build-base-image
      - build-oecp-cyng:
          context: DOCKER_HUB
          requires:
            - build-oecp-image
      - build-crypto:
          context: DOCKER_HUB
          requires:
            - build-cyng
      - build-oecp-crypto:
          context: DOCKER_HUB
          requires:
            - build-oecp-cyng
      - build-node:
          context: DOCKER_HUB
          requires:
            - build-crypto
      - build-oecp-node:
          context: DOCKER_HUB
          requires:
            - build-oecp-crypto
      - build-master:
          context: DOCKER_HUB
          requires:
            - build-node
